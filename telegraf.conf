[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "s"
  hostname = "os"
  omit_hostname = false
[[outputs.influxdb_v2]]
  organization = "${INFLUX_ORG}"
  urls = ["${INFLUX_URL}"]
  bucket = "${INFLUX_BUCKET}"
  token = "${INFLUX_TOKEN}"
[[inputs.mem]]













# [[inputs.http]]
# # URL for NYC's Citi Bike station data in JSON format
# urls = ["https://gbfs.citibikenyc.com/gbfs/en/station_status.json"]

# # Overwrite measurement name from default `http` to `citibikenyc`
# name_override = "citibike"

# # Exclude url and host items from tags
# tagexclude = ["url", "host"]

# # Data from HTTP in JSON format
# data_format = "json_v2"


#   # Add a subtable to use the `json_v2` parser
#   [[inputs.http.json_v2]]

#     # Add an object subtable for to parse a JSON object
#     [[inputs.http.json_v2.object]]

#       # Parse data in `data.stations` path only
#       path = "data.stations"

#       #Set station metadata as tags
#       tags = ["station_id"]

#       # Latest station information reported at `last_reported`
#       timestamp_key = "last_reported"

#       # Time is reported in unix timestamp format
#       timestamp_format = "unix"








# # [[inputs.mongodb]]
# #   servers = ["${MONGO_URI1}","${MONGO_URI2}","${MONGO_URI3}"]
# #   insecure_skip_verify = true
# #   gather_perdb_stats = true
# #   [inputs.mongodb.ssl]
# #     enabled = true
# #     insecure_skip_verify = true
#   # [inputs.mongodb.tags]
#   #   cluster = "Cluster0"
  
#     ## Optional TLS Config
#   # tls_ca = "/etc/telegraf/ca.pem"
#   # tls_cert = "/etc/telegraf/cert.pem"
#   # tls_key = "/etc/telegraf/key.pem"
#   ## Use TLS but skip chain & host verification
